package main

import (
	"fmt"
	"test"

	log "github.com/cihub/seelog"
)

func main() {
	defer log.Flush()

	//���������ļ�
	logger, err := log.LoggerFromConfigAsFile("./conf/seelog.xml")
	if err != nil {
		fmt.Println("parse config error")
	}
	log.ReplaceLogger(logger)
	x := "xxx" log.Debugf("===%v===", x)

	test.Test()
}

<seelog>
	<outputs>
		<splitter formatid="default">
			<console/>
			<buffered size="10000" flushperiod="1000">
				<rollingfile type="date" filename="./log/test.log" datepattern="20060102" fullname="true" maxrolls="31" />
			</buffered>
		</splitter>
		<filter levels="critical">
			<file path="critical.log" formatid="critical"/>
			<smtp formatid="criticalemail" senderaddress="noreply-notification-service@none.org" sendername="Automatic notification service" hostname="mail.none.org" hostport="587" username="nns" password="123">
				<recipient address="john-smith@none.com"/>
				<recipient address="hans-meier@none.com"/>
			</smtp>
		</filter>
	</outputs>
	<formats>
		<format id="default" format="%Date %Time [%Level] [%RelFile:%Line] [%Func] %Msg%n" />
	</formats>
</seelog>